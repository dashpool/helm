apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-configmap
  namespace: {{ .Values.namespaces.system }}
data:
  index.html: |
    <!DOCTYPE html>
    <html>
      <head>
        <title>Dashpool - Admin</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/2.10.0/github-markdown.min.css" />
        <style>
          .markdown-body h4 {
              margin-top: 0;
              margin-bottom: 0;
          }        
          .markdown-body {
            box-sizing: border-box;
            min-width: 200px;
            max-width: 980px;
            margin: 0 auto;
            padding: 45px;
          }
          @media (max-width: 767px) {
            .markdown-body {
              padding: 15px;
            }
          }
        </style>
      </head>

      <body>

        <section class="markdown-body">

          <a href="https://github.com/dashpool" aria-label="Change your organizationâ€™s avatar" class="d-block tooltipped tooltipped-s">
            <img itemprop="image" class="avatar flex-shrink-0 mb-3 mr-3 mb-md-0 mr-md-4" src="https://avatars.githubusercontent.com/u/142141325?s=200&amp;v=4" width="100" height="100" alt="@dashpool" style="float:left;width:42px;height:42px; margin-right: 5px;">
            <h1> Dashpool Admin</h1>
          </a>

          
          <h3>Dashboards</h3>
          <ul>
              <li><a href="/dashboard/" target="_blank"><h4>Traefik</h4></a></li>
              <li><a href="/kdashboard/#/workloads?namespace={{ .Values.namespaces.apps }}" target="_blank"><h4>Kubernetes</h4></a></li>
{{ if .Values.system.mongoexpress }}
              <li><a href="/mongo/" target="_blank"><h4>MongoDB</h4></a></li>
{{ end }}              
          </ul>





        </section>
      </body>
    </html>    


---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-deployment
  namespace: {{ .Values.namespaces.system }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-landing-page
  template:
    metadata:
      labels:
        app: admin-landing-page
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/nginx/html
      volumes:
      - name: config-volume
        configMap:
          name: admin-configmap


---

apiVersion: v1
kind: Service
metadata:
  name: admin-landing-service
  namespace: {{ .Values.namespaces.system }}
spec:
  selector:
    app: admin-landing-page
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort



---



apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-landing-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-redirect-https@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-landing-service
                port:
                  number: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-landing-secure-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd,{{ .Values.namespaces.system }}-dash@kubernetescrd 
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-landing-service
                port:
                  number: 80


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-traefik-secure-ingress
  namespace: {{ .Values.namespaces.ingress }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /dashboard
            pathType: Prefix
            backend:
              service:
                name: traefik-internal-service
                port:
                  number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-traefik-api-secure-ingress
  namespace: {{ .Values.namespaces.ingress }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: traefik-internal-service
                port:
                  number: 8080


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-k9s-dashboard-secure-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd,{{ .Values.namespaces.system }}-dashboard-strip@kubernetescrd
    traefik.http.services.portainer.loadbalancer.server.scheme: "https"
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /kdashboard
            pathType: Prefix
            backend:
              service:
                name: kubernetes-dashboard
                port:
                  number: 9090                  

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: dashboard-strip
  namespace: {{ .Values.namespaces.system }}  
spec:
  stripPrefix:
    prefixes:
      - /kdashboard


---

{{ if .Values.system.mongoexpress }}


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-traefik-secure-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd, {{ .Values.namespaces.system }}-dash@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /mongo
            pathType: Prefix
            backend:
              service:
                name: mongo-express
                port:
                  number: 8081


{{ end }}