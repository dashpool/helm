
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.system.admin }}
  namespace: {{ .Values.namespaces.system}}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.system.admin }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: {{ .Values.system.admin }}
  namespace: {{ .Values.namespaces.system}}

---


apiVersion: v1
kind: Secret
metadata:
  name: admin-token
  annotations:
    kubernetes.io/service-account.name: {{ .Values.system.admin }}
  namespace: {{ .Values.namespaces.system}}
type: kubernetes.io/service-account-token

---



apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.namespaces.system }}
  namespace: {{ .Values.namespaces.system }}


--- 

apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-configmap
  namespace: {{ .Values.namespaces.system }}
data:
  admin.cfg: |
    [namespaces]
{{- range $key, $value := .Values.namespaces }}
    {{ $key }} = {{ $value }}
{{- end }}   
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin
  namespace: {{ .Values.namespaces.system }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
    spec:
      containers:

      - name: admin
        image: dashpool/admin:{{ .Values.components.version }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        volumeMounts:
            - name: config-volume
              mountPath: /usr/src/admin.cfg
              subPath: admin.cfg
            - mountPath: /usr/src/kube.cfg
              name: dashpool-cfg
              subPath: kubernetes          
      volumes:
      - name: config-volume
        configMap:
          name: admin-configmap
      - name: dashpool-cfg
        secret:
          secretName: dashpool-cfg
---

apiVersion: v1
kind: Service
metadata:
  name: admin-landing-service
  namespace: {{ .Values.namespaces.system }}
spec:
  selector:
    app: admin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: NodePort



---



apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-landing-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-redirect-https@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-landing-service
                port:
                  number: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-landing-secure-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd,{{ .Values.namespaces.system }}-dash@kubernetescrd 
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-landing-service
                port:
                  number: 80


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-traefik-secure-ingress
  namespace: {{ .Values.namespaces.ingress }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /dashboard
            pathType: Prefix
            backend:
              service:
                name: traefik-internal-service
                port:
                  number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-traefik-api-secure-ingress
  namespace: {{ .Values.namespaces.ingress }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: traefik-internal-service
                port:
                  number: 8080


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-k9s-dashboard-secure-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd,{{ .Values.namespaces.system }}-dashboard-strip@kubernetescrd
    traefik.http.services.portainer.loadbalancer.server.scheme: "https"
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /kdashboard
            pathType: Prefix
            backend:
              service:
                name: kubernetes-dashboard
                port:
                  number: 9090                  

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: dashboard-strip
  namespace: {{ .Values.namespaces.system }}  
spec:
  stripPrefix:
    prefixes:
      - /kdashboard


---

{{ if .Values.system.mongoexpress }}


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-traefik-secure-ingress
  namespace: {{ .Values.namespaces.system }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: admin
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Values.namespaces.system }}-admin-auth@kubernetescrd, {{ .Values.namespaces.system }}-dash@kubernetescrd
spec:
  rules:
    - host: {{ .Values.server.host }}
      http:
        paths:
          - path: /mongo
            pathType: Prefix
            backend:
              service:
                name: mongo-express
                port:
                  number: 8081


{{ end }}
